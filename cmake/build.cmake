
include(${CMAKE_CURRENT_LIST_DIR}/functions.cmake)


if(${TARGET_BUILD_PLATFORM} STREQUAL "android")
	set(TARGET_CONFIG ${CMAKE_BUILD_TYPE})
	set(PROJECT_OUTPUT_SUB_PATH ${TARGET_BUILD_PLATFORM}/${TARGET_CONFIG}/${TARGET_ARCH})
elseif(${TARGET_BUILD_PLATFORM} STREQUAL "windows")
	set(PROJECT_OUTPUT_SUB_PATH ${TARGET_BUILD_PLATFORM}/${TARGET_CONFIG}/${TARGET_ARCH}/$<0:>)
elseif(${TARGET_BUILD_PLATFORM} STREQUAL "linux")
	set(TARGET_CONFIG ${CMAKE_BUILD_TYPE})
	set(PROJECT_OUTPUT_SUB_PATH ${TARGET_BUILD_PLATFORM}/${TARGET_CONFIG}/${TARGET_ARCH})
endif()
set(PROJECT_OUTPUT_SUB_PATH_FLAT ${TARGET_BUILD_PLATFORM}/${TARGET_CONFIG}/${TARGET_ARCH})


if(NOT TARGET_TMP_DIR)
	set(TARGET_TMP_DIR ${CMAKE_CURRENT_LIST_DIR}/../out/tmp)
	cmake_path(ABSOLUTE_PATH TARGET_TMP_DIR NORMALIZE)
endif(NOT TARGET_TMP_DIR)

set(CMAKE_USE_RELATIVE_PATHS off)
set(CMAKE_SHARED_LIBRARY_PREFIX "")
set(CMAKE_STATIC_LIBRARY_PREFIX "")
set(CMAKE_CONFIGURATION_TYPES ${TARGET_CONFIG})
set(CMAKE_PDB_OUTPUT_DIRECTORY ${TARGET_TMP_DIR}/bin/${PROJECT_OUTPUT_SUB_PATH})
set(CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY ${TARGET_TMP_DIR}/bin/${PROJECT_OUTPUT_SUB_PATH})
#set(CMAKE_VERBOSE_MAKEFILE ON)

if(${TARGET_BUILD_PLATFORM} STREQUAL "android")
	set(CMAKE_SHARED_LIBRARY_PREFIX "lib")
elseif(${TARGET_BUILD_PLATFORM} STREQUAL "linux")
	find_program(CCACHE_PROGRAM ccache)
	if(CCACHE_PROGRAM)
		set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_PROGRAM}")
	endif()
endif()


if(NOT PROJECT_DISABLE_SCAN_FOR_HEADERS)
	check_include_file_exits_or_fail(stdint.h)
	check_include_file_exits_or_fail(stdio.h)
	check_include_file_exits_or_fail(wchar.h)
	check_include_file_exits_or_fail(stdlib.h)
	check_include_file_exits_or_fail(stddef.h)
	check_include_file_exits_or_fail(time.h)
	check_include_file_exits_or_fail(math.h)
	check_include_file_exits_or_fail(float.h)
	check_include_file_exits_or_fail(ctype.h)
	check_include_file_exits_or_fail(sys/stat.h)
	check_include_file_exits_or_fail(wctype.h)
	check_include_file_exits_or_fail(locale.h)
	check_include_file_exits_or_fail(errno.h)
	check_include_file_exits_or_fail(string.h)
	check_include_file_cxx_exits_or_fail(cstdarg)
	check_include_file_cxx_exits_or_fail(type_traits)
	check_include_file_cxx_exits_or_fail(algorithm)
	check_include_file_cxx_exits_or_fail(array)
	check_include_file_cxx_exits_or_fail(atomic)
	check_include_file_cxx_exits_or_fail(vector)
	check_include_file_cxx_exits_or_fail(list)
	check_include_file_cxx_exits_or_fail(cstddef)
	check_include_file_cxx_exits_or_fail(iterator)
	check_include_file_cxx_exits_or_fail(limits)
	check_include_file_cxx_exits_or_fail(map)
	check_include_file_cxx_exits_or_fail(set)
	check_include_file_cxx_exits_or_fail(optional)
	check_include_file_cxx_exits_or_fail(shared_mutex)
	check_include_file_cxx_exits_or_fail(stdexcept)
	check_include_file_cxx_exits_or_fail(tuple)
	check_include_file_cxx_exits_or_fail(unordered_map)
	check_include_file_cxx_exits_or_fail(chrono)
	check_include_file_cxx_exits_or_fail(filesystem)
	check_include_file_cxx_exits_or_fail(fstream)
	check_include_file_cxx_exits_or_fail(atomic)
	check_include_file_cxx_exits_or_fail(thread)
	check_include_file_cxx_exits_or_fail(mutex)
	check_include_file_cxx_exits_or_fail(semaphore)
	check_include_file_cxx_exits_or_fail(span)
	check_include_file_cxx_exits_or_fail(functional)
	check_include_file_cxx_exits_or_fail(cctype)
	check_include_file_cxx_exits_or_fail(locale)
	check_include_file_cxx_exits_or_fail(random)
	check_include_file_cxx_exits_or_fail(initializer_list)
	check_include_file_cxx_exits_or_fail(sstream)
	check_include_file_cxx_exits_or_fail(variant)
	check_include_file_cxx_exits_or_fail(regex)

	if(NOT MSVC)
		check_include_file_cxx_exits_or_fail(cxxabi.h)
	endif()

endif()
